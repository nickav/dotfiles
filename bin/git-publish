#!/bin/sh
# git publish $from $to
# from defaults to the current branch
# to defaults to master
# only works if from is an ancestor of to
function publish_to {
  current_branch=$(git branch 2>/dev/null | grep -e '^*' | sed -E 's/^\* (.+)$/\1 /')

  if [ "$current_branch" == "" ]; then
    echo "Error - You do not appear to be on a branch to publish from, please check with 'git branch'"; return;
  fi
  if [ "$1" != "" ]; then
    publish $current_branch $1
  else
    publish $current_branch master
  fi
}

function publish {
  from=$1
  to=$2
  `git merge-base --is-ancestor $to $from`
  if [[ $? != 0 ]]; then
    echo "$from is not an ancestor of $to. Exiting"; return;
  fi

  from=$1
  to=$2
  if [ "$from" == "" ]; then
    echo "== Error - Please specify branch to publish from"; return;
  elif [ "$to" == "" ]; then
    echo "== Error - Please specify branch to publish to"; return;
  fi
  out=$(git stash)
  echo "-- 1. Checking out '$to' to latest version..."
  git checkout $to
  git fetch origin
  git rebase -p origin/$to
  echo "-- 2. Switching back to '$from'..."
  git checkout $from
  echo "-- 3. Rebasing '$to' to include '$from' (with -p to preserve )..."
  git rebase -p $to
  echo "-- 4. Switching back to '$to'..."
  git checkout $to
  echo "-- 5. Merging in '$from'..."
  git merge $from
  echo "-- 6. Displaying branch status..."
  git status
  git push
  echo "== All actions completed..."
  git checkout $from

  if [ "$out" != "No local changes to save" ]; then
    echo "Restoring stashed changes..."
    git stash pop
  fi
}

publish_to "$1" "$2"
